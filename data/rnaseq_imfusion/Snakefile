# documentation:
# http://nki-ccb.github.io/imfusion/usage.html
import yaml
import os.path

def load_yaml(fname):
    sset = yaml.load(open(fname))
    sset['samples'] = { k:[os.path.join(os.path.dirname(fname), sset['directory'], vi)
        for vi in v] for k,v in sset['samples'].items() }
    return sset

Mad2PB = load_yaml("../rnaseq/Mad2+PB.yaml")

rule all:
    input:
        "merged_ctgs.txt"

#rule transposon_seq:
#    input:
#        genbank = "pA6-GrOnc.gb"
#    output:
#        fasta = "pA6-GrOnc.fasta"
#        features = "pA6-GrOnc.tsv"
#    run:
#        """
#        from Bio import SeqIO
#        SeqIO.convert({input.genbank}, "genbank", {output.fasta}, "fasta")
#        """

rule combined_ref:
    """
    added to usr/lib64/python3.5/site-packages/imfusion/external/star.py:
    --limitGenomeGenerateRAM {mem}
    """
    input:
        fasta = "../genome/Mus_musculus.GRCm38.dna_rm.toplevel.fa",
        gtf = "../genome/Mus_musculus.GRCm38.92.gtf",
        transposon_fasta = "pA6-GrOnc.fasta",
        transposon_feats = "pA6-GrOnc.tsv"
    output:
        genome = "STAR_GRCm38_ens92_PB"
    resources:
        mem = 100000,
        walltime = 240
    shell:
        "imfusion-build star"
            " --reference_seq {input.fasta}"
            " --reference_gtf {input.gtf}"
            " --transposon_seq {input.transposon_fasta}"
            " --transposon_features {input.transposon_feats}"
            " --output_dir {output.genome}"
            " --blacklist_genes ENSMUSG00000039095 ENSMUSG00000038402"

rule detect_insertions:
    input:
        reference = "STAR_GRCm38_ens92_PB",
        fastq = lambda wc: Mad2PB['samples'][wc.sample]
    output:
        insertion = "{sample}/insertions.txt"
    resources:
        mem = 60000,
        walltime = 240
    shell:
        "imfusion-insertions star"
            " --fastq {input.fastq[0]}"
            " --fastq2 {input.fastq[1]}"
            " --reference {input.reference}"
            " --output_dir {wildcards.sample}"

rule expression:
    input:
        reference = "STAR_GRCm38_ens92_PB",
        fastq = lambda wc: Mad2PB['samples'][wc.sample],
        insertion = "{sample}/insertions.txt"
    output:
        merged = "{sample}/expression.txt"
    resources:
        mem = 60000,
        walltime = 240
    shell:
        "imfusion-expression"
            " --sample_dir {wildcards.sample}"
            " --reference {input.reference}"

rule merge:
    input:
        reference = "STAR_GRCm38_ens92_PB",
        insertions = expand("{sample}/insertions.txt", sample=Mad2PB['samples'].keys()),
        expression = expand("{sample}/expression.txt", sample=Mad2PB['samples'].keys())
    output:
        insertions = "insertions.txt",
        expression = "exon_counts.txt"
    params:
        samples = list(Mad2PB['samples'].keys())
    resources:
        mem = 10240
    shell:
        "imfusion-merge"
            " --sample_dirs {params.samples}"
            " --output {output.insertions}"
            " --output_expression {output.expression}"

rule call_ctgs:
    input:
        insertions = "insertions.txt",
        expression = "exon_counts.txt"
    output:
        ctgs = "merged_ctgs.txt"
    shell:
        "imfusion-ctg"
            " --insertions {input.insertions}"
            " --expression {input.expression}"
            " --reference STAR_GRCm38_ens92_PB"
            " --chromosomes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X"
            " --output {output.ctgs}"
            " --threshold 0.1"
            " --de_threshold 1"
