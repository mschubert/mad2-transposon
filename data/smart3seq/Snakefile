configfile: "seq_fastq/fastq_index.yaml"

rule all:
    input:
        expand("{run}.{ext}", run=config.keys(), ext=['rds', 'pdf']),
        "multiqc_report.html"

rule eset:
    input:
        rscript = "eset.r",
        samples = "{run}.tsv",
        infiles = lambda wc: [ rec['counts'] for rec in config[wc.run].values() ]
    output:
        outfile = "{run}.rds",
        plotfile = "{run}.pdf"
    shell:
        "Rscript {input.rscript}"
            " --samples {input.samples}"
            " --outfile {output.outfile}"
            " --plotfile {output.plotfile}"
            " {input.infiles}"

rule multiqc:
    output:
        "multiqc_report.html"
    shell:
        "multiqc --interactive --no-data-dir ."

rule align:
    input:
        genome = "genome/STAR_GRCh38_ens107",
        fastq = lambda wc: config[wc.run][wc.sample]['fastq']
    output:
        counts = "seq_aligned/{run}/{sample}.ReadsPerGene.out.tab"
    resources:
        mem = 30000,
        walltime = 120
    threads: 10
    shell:
        "STAR --runMode alignReads"
            " --runThreadN {threads}"
            " --genomeLoad LoadAndKeep"
            " --readFilesCommand zcat"
            " --limitOutSJcollapsed 2000000"
            " --genomeDir {input.genome}"
            " --readFilesIn {input.fastq}"
            " --outSAMtype BAM SortedByCoordinate"
            " --limitBAMsortRAM {resources.mem}000000"
            " --quantMode GeneCounts"
            " --outFileNamePrefix seq_aligned/{wildcards.run}/{wildcards.sample}."
