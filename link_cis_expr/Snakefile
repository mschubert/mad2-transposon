configfile: "../config.yaml"

subworkflow genesets:
    workdir: "../data/genesets"
    snakefile: "../data/genesets/Snakefile"

subworkflow network:
    workdir: "../data/networks"
    snakefile: "../data/networks/Snakefile"

expr = {
    'mile' : '../data/arrayexpress/E-GEOD-13159.RData',
    'mile2' : '../expr_diff/eset_MILE.RData',
    'mad2pb' : '../data/rnaseq/assemble.RData'
}

expr_org = {
    'mile' : 'human',
    'mile2' : 'human',
    'mad2pb' : 'mouse'
}

rule all:
    input:
        "gene_overlap.pdf",
        expand("genenet_{expr}.pdf", expr=expr.keys()),
        expand("viper_{expr}.pdf", expr=expr.keys())

rule gsva:
    input:
        expand("gsva_{expr}/{set}.RData", expr=expr.keys(), set=config['genesets'])

rule set_overlap:
    input:
        rscript = "gene_overlap.r",
        select = "interesting_sets.yaml",
        genesets = genesets([genesets("mouse/" + x + ".RData") for x in config['genesets']])
    output:
        plot = "gene_overlap.pdf"
    shell:
        "Rscript {input.rscript}"
            " --select {input.select}"
            " --plotfile {output.plot}"
            " {input.genesets}"

rule gsva_set:
    input:
        rscript = "gsva_{expr}.r",
        geneset = lambda wc: genesets(expr_org[wc.expr] + "/{set}.RData"),
        expr = lambda wc: expr[wc.expr]
    output:
        scores = "gsva_{expr}/{set}.RData"
    resources:
        mem = 10240,
        walltime = 120
    shell:
        "Rscript {input.rscript}"
            " --expr {input.expr}"
            " --geneset {input.geneset}"
            " --outfile {output.scores}"

rule cor_genenet:
    input:
        rscript = "cor_genenet.r",
        select = "interesting_sets.yaml",
        expr = lambda wc: expr[wc.expr],
        genesets = expand("gsva_{{expr}}/{sets}.RData", sets=config['genesets'])
    output:
        plot = "genenet_{expr}.pdf"
    shell:
        "Rscript {input.rscript}"
            " --select {input.select}"
            " --expr {input.expr}"
            " --plotfile {output.plot}"
            " {input.genesets}"

rule cor_viper:
    input:
        rscript = "cor_viper.r",
        expr = lambda wc: expr[wc.expr],
        net = network("E-GEOD-13159.RData")
    output:
        plot = "viper_{expr}.pdf"
    shell:
        "Rscript {input.rscript}"
            " --expr {input.expr}"
            " --network {input.net}"
            " --plotfile {output.plot}"
