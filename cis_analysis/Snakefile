subworkflow cis:
    workdir: "../data/cis"
    snakefile: "../data/cis/Snakefile"

subworkflow aneup:
    workdir: "../ploidy_compare"
    snakefile: "../ploidy_compare/Snakefile"

subworkflow imfusion:
    workdir: "../data/rnaseq_imfusion"
    snakefile: "../data/rnaseq_imfusion/Snakefile"

ins = ['Erg', 'Ets1', 'Pten', 'Nanos3', 'Rapgef6', 'Rps3', 'Notch1', 'Arid2', 'Gm26778']

rule all:
    input:
        "poisson.RData",
#        "kernel_cimpl.RData",
        expand("aneup_assocs/{test}.RData", test=['ks', 'poisson']),
        expand("ins/{ins}.pdf", ins=ins)

rule plot_ins:
    input:
        rscript = "plot_ins.r",
        exons = imfusion("exon_counts.txt"),
        ctgs = imfusion("merged_ctgs.txt"),
        rna_ins = imfusion("insertions.txt"),
        dna_ins = "analysis_set.RData"
    output:
        plot = "ins/{gene}.pdf"
    resources:
        mem = 10000
    shell:
        "Rscript {input.rscript}"
            " --exons {input.exons}"
            " --ctgs {input.ctgs}"
            " --rna_ins {input.rna_ins}"
            " --dna_ins {input.dna_ins}"
            " --gene {wildcards.gene}"
            " --plotfile {output.plot}"

rule aneuploidy_assocs:
    input:
        rscript = "aneup_assocs.r",
        poisson = "poisson.RData",
        aneup = aneup("analysis_set.RData")
    output:
        result = "aneup_assocs/{test}.RData"
    shell:
        "Rscript {input.rscript}"
            " --aneup {input.aneup}"
            " --poisson {input.poisson}"
            " --test {wildcards.test}"
            " --outfile {output.result}"

rule aneup_de:
    input:
        rscript = "aneup_de.r",
        poisson = "poisson.RData",
        expr = "../data/rnaseq/assemble.RData",
        aneup = aneup("analysis_set.RData")
    output:
        data = "aneup_de.RData",
        plot = "aneup_de.pdf"
    shell:
        "Rscript {input.rscript}"
            " --cis {input.poisson}"
            " --expr {input.expr}"
            " --aneup {input.aneup}"
            " --outfile {output.data}"
            " --plotfile {output.plot}"

rule poisson: # keep separate for now, bc gene set analysis
    input:
        rscript = "poisson.r",
        aset = "analysis_set.RData"
    output:
        result = "poisson.RData"
    shell:
        "Rscript {input.rscript} --infile {input.aset} --outfile {output.result}"

rule cimpl:
    input:
        rscript = "kernel_cimpl.r",
        aset = "analysis_set.RData"
    output:
        result = "kernel_cimpl.RData"
    shell:
        "Rscript {input.rscript} --infile {input.aset} --outfile {output.result}"

rule analysis_set:
    input:
        rscript = "analysis_set.r",
        data = cis("cis_per_tumor.RData")
    output:
        aset = "analysis_set.RData"
    shell:
        "Rscript {input.rscript} --infile {input.data} --outfile {output.aset}"
